{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/practo/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport InfinitScroll from 'react-infinite-scroll-component';\nimport Card from './components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      count: 20,\n      start: 1,\n      msg: ''\n    };\n    this.handleDelete = this.handleDelete.bind(this);\n    this.fetchNextUsers = this.fetchNextUsers.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRandomUsers();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.users.length !== this.state.users.length) {\n      this.setState({\n        users: this.state.users\n      });\n    }\n  }\n\n  handleDelete(userID) {\n    const updatedList = this.state.users.filter(user => user.login.uuid !== userID);\n    this.setState({\n      users: updatedList\n    });\n\n    if (this.state.users.length === 1) {\n      this.setState({\n        msg: 'No more users, reload the page to get more'\n      });\n    }\n  }\n\n  fetchRandomUsers() {\n    const {\n      count,\n      start\n    } = this.state;\n    axios.get(`https://randomuser.me/api/?results=${count}&start=${start}`).then(response => {\n      this.setState({\n        users: response.data.results\n      }); // console.log(response.data.results)\n    });\n  }\n\n  fetchNextUsers() {\n    const {\n      count,\n      start\n    } = this.state;\n    this.setState({\n      start: this.state.start + this.state.count\n    });\n    axios.get(`https://randomuser.me/api/?results=${count}&start=${start}`).then(response => {\n      this.setState({\n        users: this.state.users.concat(response.data.results)\n      });\n      console.log(response.data.results);\n    });\n  } // <li></li>\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: /*#__PURE__*/_jsxDEV(InfinitScroll, {\n        dataLength: this.state.users.length,\n        next: this.fetchNextUsers,\n        hasMore: true,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading ... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              gender: user.gender,\n              name: `${user.name.first.charAt(0).toUpperCase() + user.name.first.slice(1)} ${user.name.last.charAt(0).toUpperCase()}${user.name.last.slice(1)}`,\n              picture: user.picture.medium,\n              address: `${user.location.city.charAt(0).toUpperCase() + user.location.city.slice(1)}, ${user.location.state.charAt(0).toUpperCase()}${user.location.state.slice(1)}`,\n              email: user.email,\n              id: user.login.uuid,\n              nat: user.nat,\n              onDelete: this.handleDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/jyoti/practo/src/App.js"],"names":["React","Component","axios","InfinitScroll","Card","App","constructor","props","state","users","count","start","msg","handleDelete","bind","fetchNextUsers","componentDidMount","fetchRandomUsers","componentDidUpdate","prevProps","prevState","length","setState","userID","updatedList","filter","user","login","uuid","get","then","response","data","results","concat","console","log","render","map","index","gender","name","first","charAt","toUpperCase","slice","last","picture","medium","location","city","email","nat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport InfinitScroll from 'react-infinite-scroll-component';\nimport Card from './components/Card';\nimport './App.css';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            users: [],\n            count: 20,\n            start: 1,\n            msg: '',\n        };\n\n        this.handleDelete = this.handleDelete.bind(this);\n        this.fetchNextUsers = this.fetchNextUsers.bind(this);\n    }\n\n    componentDidMount() {\n        this.fetchRandomUsers();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.users.length !== this.state.users.length) {\n            this.setState({\n                users: this.state.users,\n            });\n        }\n    }\n\n    handleDelete(userID) {\n        const updatedList = this.state.users.filter((user) => user.login.uuid !== userID);\n        this.setState({\n            users: updatedList,\n        });\n        if (this.state.users.length === 1) {\n            this.setState({\n                msg: 'No more users, reload the page to get more',\n            });\n        }\n    }\n\n    fetchRandomUsers() {\n        const { count, start } = this.state;\n        axios.get(`https://randomuser.me/api/?results=${count}&start=${start}`).then((response) => {\n            this.setState({ users: response.data.results });\n            // console.log(response.data.results)\n        });\n    }\n\n    fetchNextUsers() {\n        const { count, start } = this.state;\n        this.setState({ start: this.state.start + this.state.count });\n        axios.get(`https://randomuser.me/api/?results=${count}&start=${start}`).then((response) => {\n            this.setState({ users: this.state.users.concat(response.data.results) });\n            console.log(response.data.results);\n        });\n    }\n\n    // <li></li>\n    render() {\n        return (\n            <div className=\"images\">\n                <InfinitScroll\n                    dataLength={this.state.users.length}\n                    next={this.fetchNextUsers}\n                    hasMore={true}\n                    loader={<h4>Loading ... </h4>}\n                >\n                    <ul>\n                        {this.state.users.map((user, index) => (\n                            <li key={index}>\n                                <Card\n                                    gender={user.gender}\n                                    name={`${\n                                        user.name.first.charAt(0).toUpperCase() + user.name.first.slice(1)\n                                    } ${user.name.last.charAt(0).toUpperCase()}${user.name.last.slice(1)}`}\n                                    picture={user.picture.medium}\n                                    address={`${\n                                        user.location.city.charAt(0).toUpperCase() + user.location.city.slice(1)\n                                    }, ${user.location.state.charAt(0).toUpperCase()}${user.location.state.slice(1)}`}\n                                    email={user.email}\n                                    id={user.login.uuid}\n                                    nat={user.nat}\n                                    onDelete={this.handleDelete}\n                                />\n                            </li>\n                        ))}\n                    </ul>\n                </InfinitScroll>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
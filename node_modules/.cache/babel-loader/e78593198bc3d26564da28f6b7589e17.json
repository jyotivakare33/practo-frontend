{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/practo/src/components/test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const scrollerRef = useRef();\n\n  const loadMore = page => {\n    fetch(`https://swapi.co/api/people/${page}/?format=json`).then(res => res.json()).then(res => {\n      setItems(temp => [...items, res]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '400px',\n        overflow: 'auto'\n      },\n      ref: scrollerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          pageStart: 0,\n          loadMore: loadMore,\n          hasMore: items.length < 10,\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\",\n            children: \"Loading ...\"\n          }, 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this),\n          useWindow: false,\n          getScrollParent: () => scrollerRef.current,\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Character \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), Object.keys(item).map(val => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [val, \": \", item[val]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"MGxAyHvuaI9+XDAHVGGI90Q1IKo=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/home/jyoti/practo/src/components/test.js"],"names":["React","useState","useRef","InfiniteScroll","Test","items","setItems","scrollerRef","loadMore","page","fetch","then","res","json","temp","height","overflow","length","current","map","item","index","Object","keys","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,WAAW,GAAGL,MAAM,EAA1B;;AACA,QAAMM,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,KAAK,CAAE,+BAA8BD,IAAK,eAArC,CAAL,CACKE,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWC,GAAD,IAAS;AACXN,MAAAA,QAAQ,CAAEQ,IAAD,IAAU,CAAC,GAAGT,KAAJ,EAAWO,GAAX,CAAX,CAAR;AACH,KAJL;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAZ;AAAmD,MAAA,GAAG,EAAET,WAAxD;AAAA,6BACI;AAAA,+BACI,QAAC,cAAD;AACI,UAAA,SAAS,EAAE,CADf;AAEI,UAAA,QAAQ,EAAEC,QAFd;AAGI,UAAA,OAAO,EAAEH,KAAK,CAACY,MAAN,GAAe,EAH5B;AAII,UAAA,MAAM,eACF;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA,aAA6B,CAA7B;AAAA;AAAA;AAAA;AAAA,kBALR;AASI,UAAA,SAAS,EAAE,KATf;AAUI,UAAA,eAAe,EAAE,MAAMV,WAAW,CAACW,OAVvC;AAAA,oBAYKb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAA,oCACI;AAAA,uCAAeA,KAAK,GAAG,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,GAAlB,CAAuBK,GAAD,iBACnB;AAAA,yBACKA,GADL,QACYJ,IAAI,CAACI,GAAD,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AAZL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA1CQpB,I;;KAAAA,I;AA2CT,eAAeA,IAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nfunction Test() {\n    const [items, setItems] = useState([]);\n    const scrollerRef = useRef();\n    const loadMore = (page) => {\n        fetch(`https://swapi.co/api/people/${page}/?format=json`)\n            .then((res) => res.json())\n            .then((res) => {\n                setItems((temp) => [...items, res]);\n            });\n    };\n\n    return (\n        <div className=\"App\">\n            <div style={{ height: '400px', overflow: 'auto' }} ref={scrollerRef}>\n                <div>\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={loadMore}\n                        hasMore={items.length < 10}\n                        loader={\n                            <div className=\"loader\" key={0}>\n                                Loading ...\n                            </div>\n                        }\n                        useWindow={false}\n                        getScrollParent={() => scrollerRef.current}\n                    >\n                        {items.map((item, index) => (\n                            <div>\n                                <h2>Character {index + 1}</h2>\n                                {Object.keys(item).map((val) => (\n                                    <p>\n                                        {val}: {item[val]}\n                                    </p>\n                                ))}\n                            </div>\n                        ))}\n                    </InfiniteScroll>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}
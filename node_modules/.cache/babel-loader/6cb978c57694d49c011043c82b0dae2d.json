{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/practo/src/components/test.js\";\nimport React from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteData = React.createClass({\n  displayName: \"InfiniteData\",\n\n  getInitialState() {\n    return {\n      data: [],\n      requestSent: false\n    };\n  },\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleOnScroll);\n    this.initFakeData();\n  },\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleOnScroll);\n  },\n\n  initFakeData() {\n    const data = this.createFakeData(this.state.data.length, 100);\n    this.setState({\n      data\n    });\n  },\n\n  createFakeData(startKey, counter) {\n    let i = 0;\n    const data = [];\n\n    for (i = 0; i < counter; i + 1) {\n      const fakeData = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-info\",\n        children: [\"Fake Data \", startKey + i]\n      }, startKey + i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n\n      data.push(fakeData);\n    }\n\n    return data;\n  },\n\n  querySearchResult() {\n    if (this.state.requestSent) {\n      return;\n    } // enumerate a slow query\n\n\n    setTimeout(this.doQuery, 2000);\n    this.setState({\n      requestSent: true\n    });\n  },\n\n  doQuery() {\n    // use jQuery\n    $.ajax({\n      url: '#',\n      data: null,\n      method: 'GET',\n      success: function (data, textStatus, jqXHR) {\n        const fakeData = this.createFakeData(this.state.data.length, 20);\n        const newData = this.state.data.concat(fakeData);\n        this.setState({\n          data: newData,\n          requestSent: false\n        });\n      }.bind(this),\n      error: function (jqXHR, textStatus, errorThrown) {\n        this.setState({\n          requestSent: false\n        });\n      }.bind(this)\n    });\n  },\n\n  handleOnScroll() {\n    // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n    const scrollTop = document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;\n    const scrollHeight = document.documentElement && document.documentElement.scrollHeight || document.body.scrollHeight;\n    const clientHeight = document.documentElement.clientHeight || window.innerHeight;\n    const scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n\n    if (scrolledToBottom) {\n      this.querySearchResult();\n    }\n  },\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-container\",\n        children: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), (() => {\n        if (this.state.requestSent) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-loading\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-refresh fa-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }, this);\n      })()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n});\nexport default InfiniteData;","map":{"version":3,"sources":["/home/jyoti/practo/src/components/test.js"],"names":["React","InfiniteData","createClass","getInitialState","data","requestSent","componentDidMount","window","addEventListener","handleOnScroll","initFakeData","componentWillUnmount","removeEventListener","createFakeData","state","length","setState","startKey","counter","i","fakeData","push","querySearchResult","setTimeout","doQuery","$","ajax","url","method","success","textStatus","jqXHR","newData","concat","bind","error","errorThrown","scrollTop","document","documentElement","body","scrollHeight","clientHeight","innerHeight","scrolledToBottom","Math","ceil","render"],"mappings":"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","sourcesContent":["import React from 'react-dom';\n\nconst InfiniteData = React.createClass({\n    getInitialState() {\n        return { data: [], requestSent: false };\n    },\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleOnScroll);\n\n        this.initFakeData();\n    },\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleOnScroll);\n    },\n\n    initFakeData() {\n        const data = this.createFakeData(this.state.data.length, 100);\n\n        this.setState({ data });\n    },\n\n    createFakeData(startKey, counter) {\n        let i = 0;\n        const data = [];\n        for (i = 0; i < counter; i + 1) {\n            const fakeData = (\n                <div key={startKey + i} className=\"data-info\">\n                    Fake Data {startKey + i}\n                </div>\n            );\n            data.push(fakeData);\n        }\n\n        return data;\n    },\n\n    querySearchResult() {\n        if (this.state.requestSent) {\n            return;\n        }\n\n        // enumerate a slow query\n        setTimeout(this.doQuery, 2000);\n\n        this.setState({ requestSent: true });\n    },\n\n    doQuery() {\n        // use jQuery\n        $.ajax({\n            url: '#',\n            data: null,\n            method: 'GET',\n            success: function (data, textStatus, jqXHR) {\n                const fakeData = this.createFakeData(this.state.data.length, 20);\n                const newData = this.state.data.concat(fakeData);\n                this.setState({ data: newData, requestSent: false });\n            }.bind(this),\n            error: function (jqXHR, textStatus, errorThrown) {\n                this.setState({ requestSent: false });\n            }.bind(this),\n        });\n    },\n\n    handleOnScroll() {\n        // http://stackoverflow.com/questions/9439725/javascript-how-to-detect-if-browser-window-is-scrolled-to-bottom\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n        const scrollHeight =\n            (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\n        const clientHeight = document.documentElement.clientHeight || window.innerHeight;\n        const scrolledToBottom = Math.ceil(scrollTop + clientHeight) >= scrollHeight;\n\n        if (scrolledToBottom) {\n            this.querySearchResult();\n        }\n    },\n\n    render() {\n        return (\n            <div>\n                <div className=\"data-container\">{this.state.data}</div>\n                {(() => {\n                    if (this.state.requestSent) {\n                        return (\n                            <div className=\"data-loading\">\n                                <i className=\"fa fa-refresh fa-spin\"></i>\n                            </div>\n                        );\n                    }\n                    return <div className=\"data-loading\"></div>;\n                })()}\n            </div>\n        );\n    },\n});\n\nexport default InfiniteData;\n"]},"metadata":{},"sourceType":"module"}
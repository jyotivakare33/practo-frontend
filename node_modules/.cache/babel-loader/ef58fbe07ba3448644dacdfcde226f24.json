{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/practo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useBookSearch(query, pageNumber);\n  const observer = useRef();\n  const lastBookElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  function handleSearch(e) {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), books.map((book, index) => {\n      if (books.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastBookElementRef,\n          children: book\n        }, book, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: book\n      }, book, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error && 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"bgQNwod34kJ6L5hsHxV7rGFCvxw=\", false, function () {\n  return [useBookSearch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jyoti/practo/src/App.js"],"names":["React","useState","useRef","useCallback","useBookSearch","App","query","setQuery","pageNumber","setPageNumber","books","hasMore","loading","error","observer","lastBookElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleSearch","e","target","value","map","book","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAqCT,aAAa,CAACE,KAAD,EAAQE,UAAR,CAAxD;AAEA,QAAMM,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,kBAAkB,GAAGZ,WAAW,CACjCa,IAAD,IAAU;AACN,QAAIJ,OAAJ,EAAa;AACb,QAAIE,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAA0BC,OAAD,IAAa;AACrD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BV,OAAjC,EAA0C;AACtCF,QAAAA,aAAa,CAAEa,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH;AACJ,KAJkB,CAAnB;AAKA,QAAIN,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACb,GAViC,EAWlC,CAACJ,OAAD,EAAUD,OAAV,CAXkC,CAAtC;;AAcA,WAASa,YAAT,CAAsBC,CAAtB,EAAyB;AACrBlB,IAAAA,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAlB,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH;;AAED,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEH,KAA1B;AAAiC,MAAA,QAAQ,EAAEkB;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKd,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,UAAIpB,KAAK,CAACqB,MAAN,KAAiBD,KAAK,GAAG,CAA7B,EAAgC;AAC5B,4BACI;AAAK,UAAA,GAAG,EAAEf,kBAAV;AAAA,oBACKc;AADL,WAAmCA,IAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;;AACD,0BAAO;AAAA,kBAAiBA;AAAjB,SAAUA,IAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KATA,CAFL,eAYI;AAAA,gBAAMjB,OAAO,IAAI;AAAjB;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA,gBAAMC,KAAK,IAAI;AAAf;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAiBH;;GA3CuBR,G;UAIuBD,a;;;KAJvBC,G","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport useBookSearch from './useBookSearch';\n\nexport default function App() {\n    const [query, setQuery] = useState('');\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const { books, hasMore, loading, error } = useBookSearch(query, pageNumber);\n\n    const observer = useRef();\n    const lastBookElementRef = useCallback(\n        (node) => {\n            if (loading) return;\n            if (observer.current) observer.current.disconnect();\n            observer.current = new IntersectionObserver((entries) => {\n                if (entries[0].isIntersecting && hasMore) {\n                    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n                }\n            });\n            if (node) observer.current.observe(node);\n        },\n        [loading, hasMore],\n    );\n\n    function handleSearch(e) {\n        setQuery(e.target.value);\n        setPageNumber(1);\n    }\n\n    return (\n        <>\n            <input type=\"text\" value={query} onChange={handleSearch}></input>\n            {books.map((book, index) => {\n                if (books.length === index + 1) {\n                    return (\n                        <div ref={lastBookElementRef} key={book}>\n                            {book}\n                        </div>\n                    );\n                }\n                return <div key={book}>{book}</div>;\n            })}\n            <div>{loading && 'Loading...'}</div>\n            <div>{error && 'Error'}</div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
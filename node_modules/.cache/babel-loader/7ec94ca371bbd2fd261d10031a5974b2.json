{"ast":null,"code":"var _jsxFileName = \"/home/jyoti/practo/src/components/practoData.js\";\nimport React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst practoData = props => {\n  const {\n    photos,\n    dimensions,\n    pages,\n    currentPage\n  } = props;\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    props.filterHendler(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: photos ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: photos.length,\n      next: props.fetchMoreData,\n      hasMore: pages - currentPage !== 0,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: photos.map((photo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: photo.id,\n            src: photo.url,\n            onClick: () => props.imageHendler(photo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\nexport default practoData;","map":{"version":3,"sources":["/home/jyoti/practo/src/components/practoData.js"],"names":["React","useState","InfiniteScroll","practoData","props","photos","dimensions","pages","currentPage","handleChange","event","setValue","target","value","filterHendler","length","fetchMoreData","map","photo","index","id","url","imageHendler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA6CJ,KAAnD;;AACA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAT,IAAAA,KAAK,CAACU,aAAN,CAAoBJ,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACH,GAHD;;AAIA,sBACI;AAAA,cACKR,MAAM,gBACH,QAAC,cAAD;AACI,MAAA,UAAU,EAAEA,MAAM,CAACU,MADvB;AAEI,MAAA,IAAI,EAAEX,KAAK,CAACY,aAFhB;AAGI,MAAA,OAAO,EAAET,KAAK,GAAGC,WAAR,KAAwB,CAHrC;AAII,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA,6BAMI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACKH,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACR;AAAA,iCACI;AAAK,YAAA,EAAE,EAAED,KAAK,CAACE,EAAf;AAAmB,YAAA,GAAG,EAAEF,KAAK,CAACG,GAA9B;AAAmC,YAAA,OAAO,EAAE,MAAMjB,KAAK,CAACkB,YAAN,CAAmBJ,KAAnB;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADG,GAeH;AAhBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA1BD;;AA2BA,eAAehB,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst practoData = (props) => {\n    const { photos, dimensions, pages, currentPage } = props;\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        props.filterHendler(event.target.value);\n    };\n    return (\n        <div>\n            {photos ? (\n                <InfiniteScroll\n                    dataLength={photos.length}\n                    next={props.fetchMoreData}\n                    hasMore={pages - currentPage !== 0}\n                    loader={<h4>Loading...</h4>}\n                >\n                    <div className=\"flex\">\n                        {photos.map((photo, index) => (\n                            <div key={index}>\n                                <img id={photo.id} src={photo.url} onClick={() => props.imageHendler(photo)} />\n                            </div>\n                        ))}\n                    </div>\n                </InfiniteScroll>\n            ) : null}\n        </div>\n    );\n};\nexport default practoData;\n"]},"metadata":{},"sourceType":"module"}